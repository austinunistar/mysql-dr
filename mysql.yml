---
- hosts: all
  become: true
  vars:
     root_password: 'finicast'
     mysql_root_pass: 'finicast'

  tasks:
  - name: update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      state: latest

  - name: install APT extras
    ansible.builtin.apt:
      name: "{{ item }}"
      state: latest
    loop:
      - ['dirmngr', 'debconf']

  - name: add official MySQL GPG key for update
    ansible.builtin.shell: |
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 467B942D3A79BD29
            
  - name: add official MySQL GPG key for MySQL repository
    ansible.builtin.shell: |
            apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 5072E1F5
    register: apt_key_install
    until: apt_key_install is succeeded
    
  - name: add MySQL repository for Ubuntu
    ansible.builtin.apt:
      deb: https://dev.mysql.com/get/mysql-apt-config_0.8.16-1_all.deb
    ignore_errors: yes

  - name: update all packages to their latest version
    ansible.builtin.apt:
      name: "*"
      state: latest

  - name: set MySQL version
    ansible.builtin.debconf:
      name: mysql-community-server
      question: mysql-apt-config/select-server
      value: "mysql-8.0"
      vtype: string

  - name: set MySQL root password
    ansible.builtin.debconf:
      name: mysql-community-server
      question: mysql-community-server/root-pass
      value: "{{ root_password }}"
      vtype: password

  - name: confirm MySQL root password
    ansible.builtin.debconf:
      name: mysql-community-server
      question: mysql-community-server/re-root-pass
      value: "{{ root_password }}"
      vtype: password

  - name: enable Legacy Authentication Method
    ansible.builtin.debconf:
      name: mysql-community-server
      question: mysql-server/default-auth-override
      value: Use Legacy Authentication Method (Retain MySQL 5.x Compatibility)
      vtype: select

  - name: install MySQL 8.0 community server
    ansible.builtin.apt:
      name: "{{ item }}"
      update_cache: yes
      state: latest
    with_items:
      - mysql-server
      - python3-mysqldb
        
  - name: create a testng database
    ansible.builtin.mysql_db: 
      name: testdb
      state: present
      login_user: root
      login_password: "{{ mysql_root_pass }}"

      #  - name: import phpmyadmin installation
      #    include: phpmyadmin.yml
      #    tags: pma4.6
   
  - name: import phpmyadmin installation
    include: phpmyadmin_5.2.yml
    tags: pma5.2
